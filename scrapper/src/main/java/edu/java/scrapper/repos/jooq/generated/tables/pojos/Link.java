/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.repos.jooq.generated.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long linkId;
    private String url;
    private OffsetDateTime updateAt;
    private OffsetDateTime checkAt;
    private String linkType;
    private String data;

    public Link() {
    }

    public Link(Link value) {
        this.linkId = value.linkId;
        this.url = value.url;
        this.updateAt = value.updateAt;
        this.checkAt = value.checkAt;
        this.linkType = value.linkType;
        this.data = value.data;
    }

    @ConstructorProperties({"linkId", "url", "updateAt", "checkAt", "linkType", "data"})
    public Link(
        @Nullable Long linkId,
        @NotNull String url,
        @NotNull OffsetDateTime updateAt,
        @NotNull OffsetDateTime checkAt,
        @NotNull String linkType,
        @NotNull String data
    ) {
        this.linkId = linkId;
        this.url = url;
        this.updateAt = updateAt;
        this.checkAt = checkAt;
        this.linkType = linkType;
        this.data = data;
    }

    /**
     * Getter for <code>LINK.LINK_ID</code>.
     */
    @Nullable
    public Long getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>LINK.LINK_ID</code>.
     */
    public void setLinkId(@Nullable Long linkId) {
        this.linkId = linkId;
    }

    /**
     * Getter for <code>LINK.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 2083)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINK.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINK.UPDATE_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getUpdateAt() {
        return this.updateAt;
    }

    /**
     * Setter for <code>LINK.UPDATE_AT</code>.
     */
    public void setUpdateAt(@NotNull OffsetDateTime updateAt) {
        this.updateAt = updateAt;
    }

    /**
     * Getter for <code>LINK.CHECK_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getCheckAt() {
        return this.checkAt;
    }

    /**
     * Setter for <code>LINK.CHECK_AT</code>.
     */
    public void setCheckAt(@NotNull OffsetDateTime checkAt) {
        this.checkAt = checkAt;
    }

    /**
     * Getter for <code>LINK.LINK_TYPE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getLinkType() {
        return this.linkType;
    }

    /**
     * Setter for <code>LINK.LINK_TYPE</code>.
     */
    public void setLinkType(@NotNull String linkType) {
        this.linkType = linkType;
    }

    /**
     * Getter for <code>LINK.DATA</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getData() {
        return this.data;
    }

    /**
     * Setter for <code>LINK.DATA</code>.
     */
    public void setData(@NotNull String data) {
        this.data = data;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Link other = (Link) obj;
        if (this.linkId == null) {
            if (other.linkId != null) {
                return false;
            }
        } else if (!this.linkId.equals(other.linkId)) {
            return false;
        }
        if (this.url == null) {
            if (other.url != null) {
                return false;
            }
        } else if (!this.url.equals(other.url)) {
            return false;
        }
        if (this.updateAt == null) {
            if (other.updateAt != null) {
                return false;
            }
        } else if (!this.updateAt.equals(other.updateAt)) {
            return false;
        }
        if (this.checkAt == null) {
            if (other.checkAt != null) {
                return false;
            }
        } else if (!this.checkAt.equals(other.checkAt)) {
            return false;
        }
        if (this.linkType == null) {
            if (other.linkType != null) {
                return false;
            }
        } else if (!this.linkType.equals(other.linkType)) {
            return false;
        }
        if (this.data == null) {
            if (other.data != null) {
                return false;
            }
        } else if (!this.data.equals(other.data)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.updateAt == null) ? 0 : this.updateAt.hashCode());
        result = prime * result + ((this.checkAt == null) ? 0 : this.checkAt.hashCode());
        result = prime * result + ((this.linkType == null) ? 0 : this.linkType.hashCode());
        result = prime * result + ((this.data == null) ? 0 : this.data.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(linkId);
        sb.append(", ").append(url);
        sb.append(", ").append(updateAt);
        sb.append(", ").append(checkAt);
        sb.append(", ").append(linkType);
        sb.append(", ").append(data);

        sb.append(")");
        return sb.toString();
    }
}
